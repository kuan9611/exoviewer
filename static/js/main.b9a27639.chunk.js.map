{"version":3,"sources":["catalog.csv","solar.csv","Control.js","Info.js","View.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Control","_this$props","this","props","rFactor","vFactor","showScale","rFactorListener","vFactorListener","showScaleListener","react_default","a","createElement","ExpansionPanel_default","className","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","List_default","ListItem_default","ListItemText_default","primary","type","min","max","step","value","onChange","e","target","checked","React","Component","Info","name","endpoint","replace","concat","info","Card_default","CardHeader_default","action","IconButton_default","onClick","closeListener","Close_default","size","href","generateLink","Link_default","title","CardContent_default","mass","radi","perd","dist","ecct","star","year","View","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","planets","view","createRef","state","selection","prevProps","data","length","makePlanets","makeView","_this2","window","addEventListener","_this3","clearInterval","interval","removeEventListener","map","objectSpread","i","indx","_R","_r","Math","pow","v","hidden","selected","_this4","t0","Date","setHours","w","innerWidth","h","innerHeight","distScale","d3","domain","range","radiScale","reduce","d","forEach","R","r","svg","current","attr","selectAll","remove","append","container","handleHover","enter","classed","handleClick","clearSelected","setState","on","updateView","distAxis","ticks","gDistAxisGroup","text","gDistAxis","transform","k","dom","scale","copy","setInterval","now","_this5","select","_this6","_this$state","ref","src_Info","src_Control","rf","handleRadiusFactorChange","vf","handleVelocityFactorChange","toggleShowScale","Table","table","filters","getResolvedState","sortedData","selectionChangeListener","selections","_original","columns","accessor","Header","toggleSelectAll","Filter","fontSize","Cell","_ref","original","readOnly","sortable","width","react_resizable","height","axis","resizeHandles","minConstraints","maxConstraints","es","showPageSizeOptions","resizable","filterable","filtered","onFilteredChange","defaultFilterMethod","filter","row","src","pivotId","id","qry","toLowerCase","undefined","String","includes","getTrProps","rowInfo","style","background","pageText","noDataText","App","Papa","parse","require","header","download","dynamicTyping","skipEmptyLines","complete","result","updateData","raw","planet_status","orbital_period","semi_major_axis","star_name","trim","radius","eccentricity","detection_type","discovered","toConsumableArray","s","newData","src_View","src_Table","handleSelectionChange","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9a27639.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/catalog.57fa9aa8.csv\";","module.exports = __webpack_public_path__ + \"static/media/solar.6136b11a.csv\";","import React from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nclass Control extends React.Component {\r\n  render() {\r\n    const { rFactor, vFactor, showScale,\r\n      rFactorListener, vFactorListener, showScaleListener } = this.props;\r\n    return (\r\n      <ExpansionPanel className=\"control-panel overlay\">\r\n        <ExpansionPanelSummary\r\n          className=\"control-title\"\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          Settings\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"radius\" />\r\n              <input\r\n                type=\"range\"\r\n                min=\"5\" max=\"100\" step=\"5\" value={rFactor}\r\n                onChange={e => rFactorListener(e.target.value)}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"speed\" />\r\n              <input\r\n                type=\"range\"\r\n                min=\"-5\" max=\"3\" step=\"1\" value={vFactor}\r\n                onChange={e => vFactorListener(e.target.value)}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"show scale\" />\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={showScale}\r\n                onChange={showScaleListener}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nclass Info extends React.Component {\r\n  generateLink(name) {\r\n    const endpoint = name.replace(/ /g,\"_\");\r\n    return `http://exoplanet.eu/catalog/${endpoint}/`;\r\n  }\r\n\r\n  render() {\r\n    const info = this.props.info;\r\n    return (\r\n      <Card className=\"info-card overlay\">\r\n        <CardHeader\r\n          action={\r\n            <div>\r\n              <IconButton onClick={this.props.closeListener}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <br/>\r\n              <IconButton className=\"info-card-link\" size=\"large\"\r\n                href={this.generateLink(info.name)} target=\"_blank\">\r\n                <LinkIcon />\r\n              </IconButton>\r\n            </div>\r\n          }\r\n          title={info.name}\r\n        />\r\n        <CardContent>\r\n          <div>mass: <strong>{info.mass || \"?\"} M<sub>J</sub></strong></div>\r\n          <div>radius: <strong>{info.radi || \"?\"} M<sub>J</sub></strong></div>\r\n          <div>orbital period: <strong>{info.perd} days</strong></div>\r\n          <div>semi-major axis: <strong>{info.dist} AU</strong></div>\r\n          <div>eccentricity (not shown): <strong>{info.ecct}</strong></div>\r\n          <div>host star: <strong>{info.star}</strong></div>\r\n          <div>detection method: <strong>{info.type || \"-\"}</strong></div>\r\n          <div>year of discovery: <strong>{info.year || \"-\"}</strong></div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport Control from './Control';\r\nimport Info from './Info';\r\nimport * as d3 from 'd3';\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.planets = [];\r\n    this.view = React.createRef();\r\n    this.state = {\r\n      showScale: true,\r\n      selection: null,\r\n      rFactor: 10,\r\n      vFactor: -1,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.data.length < this.props.data.length) {\r\n      this.makePlanets();\r\n      this.makeView();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", () => this.makeView());\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n    window.removeEventListener(\"resize\", () => this.makeView());\r\n  }\r\n\r\n  makePlanets() {\r\n    this.planets = this.props.data.map(p => ({\r\n      ...p,\r\n      i: p.indx,\r\n      _R: p.dist,\r\n      _r: p.radi || Math.pow(p.mass, 0.32143),\r\n      v: 1/p.perd,\r\n      hidden: !p.selected,\r\n    }));\r\n  }\r\n\r\n  makeView() {\r\n    clearInterval(this.interval);\r\n    const t0 = new Date().setHours(0,0,0,0);\r\n\r\n    const w = window.innerWidth - 300;\r\n    const h = window.innerHeight;\r\n\r\n    const data = this.planets;\r\n    const distScale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([0, w/2-60]);\r\n    const radiScale = d3.scaleLinear()\r\n      .domain([0, data.reduce((max, d) => Math.max(max, d._r), 0)])\r\n      .range([0, 1]);\r\n    data.forEach(d => {\r\n      d.R = distScale(d._R);\r\n      d.r = radiScale(d._r);\r\n    });\r\n\r\n    const svg = d3.select(this.view.current)\r\n      .attr(\"width\", w)\r\n      .attr(\"height\", h);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    svg.append(\"circle\")\r\n      .attr(\"r\", 1)\r\n      .attr(\"cx\", w/2)\r\n      .attr(\"cy\", h/2)\r\n      .attr(\"id\", \"sun\");\r\n\r\n    const container = svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${w/2},${h/2})`);\r\n\r\n    const handleHover = (d, enter) => {\r\n      d3.select(`#o${d.i}`).classed(\"hover\", enter);\r\n      d3.select(`#p${d.i}`).classed(\"hover\", enter);\r\n    }\r\n    const handleClick = d => {\r\n      this.clearSelected();\r\n      this.setState({ selection: d });\r\n      d3.select(`#o${d.i}`).classed(\"selected\", true);\r\n      d3.select(`#p${d.i}`).classed(\"selected\", true);\r\n    }\r\n\r\n    container.selectAll(\".orbit\").data(data).enter()\r\n      .append(\"circle\")\r\n        .attr(\"r\", d => d.R)\r\n        .attr(\"id\", d => `o${d.i}`)\r\n        .attr(\"class\", \"orbit\")\r\n        .classed(\"selected\", d => d === this.state.selection)\r\n        .on(\"mouseover\", d => handleHover(d, true))\r\n        .on(\"mouseout\", d => handleHover(d, false))\r\n        .on(\"click\", d => handleClick(d));\r\n    container.selectAll(\".planet_cluster\").data(data).enter()\r\n      .append(\"g\")\r\n        .attr(\"class\", \"planet_cluster\")\r\n      .append(\"circle\")\r\n        .attr(\"r\", d => d.r * this.state.rFactor)\r\n        .attr(\"cx\", d => d.R)\r\n        .attr(\"id\", d => `p${d.i}`)\r\n        .attr(\"class\", \"planet\")\r\n        .classed(\"selected\", d => d === this.state.selection)\r\n        .on(\"mouseover\", d => handleHover(d, true))\r\n        .on(\"mouseout\", d => handleHover(d, false))\r\n        .on(\"click\", d => handleClick(d));\r\n    this.updateView();\r\n\r\n    const distAxis = d3.axisBottom(distScale).ticks(5);\r\n    const gDistAxisGroup = svg.append(\"g\")\r\n      .attr('transform', `translate(${w/2},${h-50})`)\r\n      .attr(\"class\", \"dist-axis\")\r\n      .classed(\"hidden\", !this.state.showScale);\r\n    gDistAxisGroup.append(\"text\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"transform\", `translate(${w/4-25},${35})`)\r\n        .text(\"AU\");\r\n    const gDistAxis = gDistAxisGroup.append(\"g\").call(distAxis);\r\n    svg.call(d3.zoom().on(\"zoom\", () => {\r\n      svg.selectAll(\".orbit\").attr(\"r\", d => d.R * d3.event.transform.k);\r\n      svg.selectAll(\".planet\").attr(\"cx\", d => d.R * d3.event.transform.k);\r\n      const dom = [0, distScale.domain()[1] / d3.event.transform.k];\r\n      gDistAxis.call(distAxis.scale(distScale.copy().domain(dom)));\r\n    }));\r\n\r\n    this.interval = setInterval(() => {\r\n      svg.selectAll(\".planet_cluster\")\r\n        .attr(\"transform\", d => {\r\n          const v = d.v * Math.pow(2, this.state.vFactor);\r\n          return `rotate(${(Date.now() - t0) * v})`;\r\n        });\r\n    }, 100);\r\n  }\r\n\r\n  updateView() {\r\n    const svg = d3.select(this.view.current);\r\n    svg.selectAll(\".orbit\").classed(\"hidden\", d => d.hidden);\r\n    svg.selectAll(\".planet_cluster\").classed(\"hidden\", d => d.hidden)\r\n      .selectAll(\"circle\").attr(\"r\", d => d.r * this.state.rFactor);\r\n    svg.select(\".dist-axis\").classed(\"hidden\", !this.state.showScale);\r\n  }\r\n\r\n  clearSelected() {\r\n    d3.selectAll(\".orbit.selected\").classed(\"selected\", false);\r\n    d3.selectAll(\".planet.selected\").classed(\"selected\", false);\r\n    this.setState({ selection: null });\r\n  }\r\n\r\n  handleRadiusFactorChange(rFactor) {\r\n    this.setState({ rFactor });\r\n  }\r\n\r\n  handleVelocityFactorChange(vFactor) {\r\n    this.setState({ vFactor });\r\n  }\r\n\r\n  toggleShowScale() {\r\n    this.setState({ showScale: !this.state.showScale });\r\n  }\r\n\r\n  render() {\r\n    this.planets.forEach(p => {\r\n      p.hidden = !this.props.data[p.i].selected;\r\n    });\r\n    this.updateView();\r\n    const { selection, rFactor, vFactor, showScale } = this.state;\r\n    return (\r\n      <div className=\"View\">\r\n        <svg ref={this.view} />\r\n        {selection && !selection.hidden &&\r\n          <Info\r\n            info={selection}\r\n            closeListener={() => this.clearSelected()}\r\n          />\r\n        }\r\n        <Control\r\n          rFactor={rFactor}\r\n          vFactor={vFactor}\r\n          showScale={showScale}\r\n          rFactorListener={rf => this.handleRadiusFactorChange(rf)}\r\n          vFactorListener={vf => this.handleVelocityFactorChange(vf)}\r\n          showScaleListener={() => this.toggleShowScale()}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import React, { Component } from 'react';\r\nimport { ResizableBox } from 'react-resizable';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ReactTable from 'react-table';\r\n\r\nimport 'react-table/react-table.css';\r\nimport 'react-resizable/css/styles.css';\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.table = React.createRef();\r\n    this.state = {\r\n      selectAll: true,\r\n      filters: [],\r\n    };\r\n  }\r\n\r\n  toggleSelectAll() {\r\n    const selectAll = !this.state.selectAll;\r\n    if (this.table.current) {\r\n      const data = this.table.current.getResolvedState().sortedData;\r\n      this.props.selectionChangeListener({\r\n        selected: selectAll,\r\n        selections: data.map(p => p._original.indx),\r\n      });\r\n      this.setState({ selectAll });\r\n    }\r\n  }\r\n\r\n  render() {   \r\n    const columns = [{\r\n      accessor: \"selected\",\r\n      Header: (\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          checked={this.state.selectAll}\r\n          onChange={() => this.toggleSelectAll()}\r\n        />\r\n      ),\r\n      Filter: (\r\n        <IconButton\r\n          className=\"clear-filter\"\r\n          title=\"Clear all filters\"\r\n          onClick={() => this.setState({ filters: [] })}\r\n        >\r\n          <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      ),\r\n      Cell: ({ original }) => (\r\n        <input readOnly\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          checked={this.props.data[original.indx].selected}\r\n        />\r\n      ),\r\n      sortable: false,\r\n      width: 30,\r\n    }, {\r\n      Header: \"Planet Name\",\r\n      accessor: \"name\",\r\n      width: 150,\r\n    }, {\r\n      Header: \"Host Star\",\r\n      accessor: \"star\",\r\n      width: 150,\r\n    }, {\r\n      Header: <span>Mass (M<sub>J</sub>)</span>,\r\n      accessor: \"mass\",\r\n      width: 80,\r\n    }, {\r\n      Header: <span>Radius (R<sub>J</sub>)</span>,\r\n      accessor: \"radi\",\r\n      width: 80,\r\n    }, {\r\n      Header: \"Orb. Period (days)\",\r\n      accessor: \"perd\",\r\n      width: 110,\r\n    }, {\r\n      Header: \"S-Major Axis (AU)\",\r\n      accessor: \"dist\",\r\n      width: 120,\r\n    }, {\r\n      Header: \"Detection Type\",\r\n      accessor: \"type\",\r\n      sortable: false,\r\n      width: 120,\r\n    }, {\r\n      Header: \"Year\",\r\n      accessor: \"year\",\r\n      width: 60,\r\n    }];\r\n\r\n    const filterCaseInsensitive = (filter, row) => {\r\n      const src = row[filter.pivotId || filter.id];\r\n      const qry = filter.value.toLowerCase();\r\n      return src === undefined || String(src).toLowerCase().includes(qry);\r\n    };\r\n\r\n    const trProps = (state, rowInfo) => {\r\n      return (rowInfo && rowInfo.original?\r\n        {\r\n          onClick: () => this.props.selectionChangeListener({\r\n            selected: !rowInfo.original.selected,\r\n            selections: [rowInfo.original.indx],\r\n          }),\r\n          style: {\r\n            background: rowInfo.original.selected? \"#eee\" : \"#fff\",\r\n          }\r\n        } : {});\r\n    };\r\n\r\n    const h = window.innerHeight;\r\n   \r\n    return (\r\n      <div className=\"Table\">\r\n        <ResizableBox\r\n          width={300}\r\n          height={h}\r\n          axis=\"x\"\r\n          resizeHandles={[\"e\"]}\r\n          minConstraints={[300, h]}\r\n          maxConstraints={[900, h]}\r\n        >\r\n          <ReactTable\r\n            ref={this.table}\r\n            data={this.props.data}\r\n            columns={columns}\r\n            showPageSizeOptions={false}\r\n            resizable={false}\r\n            filterable={true}\r\n            filtered={this.state.filters}\r\n            onFilteredChange={filters => this.setState({ filters })}\r\n            defaultFilterMethod={filterCaseInsensitive}\r\n            getTrProps={trProps}\r\n            pageText=\"\"\r\n            noDataText=\"No results found\"\r\n          />\r\n        </ResizableBox>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\nimport Papa from 'papaparse';\nimport View from './View';\nimport Table from './Table';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentWillMount() {\n    Papa.parse(require('./catalog.csv'), {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      complete: result => this.updateData(result.data),\n    });\n    Papa.parse(require('./solar.csv'), {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      complete: result => this.updateData(result.data),\n    });\n  }\n\n  updateData(raw) {\n    const size = this.state.data.length;\n    let data = raw\n    .filter(p => {\n      return p.planet_status === \"Confirmed\" &&\n        p.orbital_period && p.semi_major_axis && p.star_name;\n    })\n    .map((p, i) => ({\n      indx: i + size,\n      name: p[\"# name\"].trim(),\n      mass: p.mass,\n      radi: p.radius,\n      perd: p.orbital_period,\n      dist: p.semi_major_axis,\n      ecct: p.eccentricity,\n      type: p.detection_type,\n      year: p.discovered,\n      star: p.star_name.trim(),\n      selected: true,\n    }));\n    this.setState({ data: [...this.state.data, ...data] });\n  }\n\n  handleSelectionChange(s) {\n    const newData = [...this.state.data];\n    s.selections.forEach(i => {\n      newData[i].selected = s.selected;\n    });\n    this.setState({ data: newData });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <View\n          data={this.state.data}\n        />\n        <Table\n          data={this.state.data}\n          selectionChangeListener={s => this.handleSelectionChange(s)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}