{"version":3,"sources":["catalog.csv","Info.js","View.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Info","name","endpoint","replace","concat","info","this","props","react_default","a","createElement","Card_default","className","CardHeader_default","action","IconButton_default","onClick","closeListener","Close_default","size","href","generateLink","target","Link_default","title","CardContent_default","mass","radi","perd","dist","ecct","star","type","year","React","Component","View","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","planets","view","createRef","state","selection","prevProps","keys","data","length","makePlanets","makeView","clearInterval","interval","values","forEach","x","push","map","objectSpread","R","r","Math","pow","v","hidden","selected","flat","i","_this2","t0","Date","setHours","w","window","innerWidth","h","innerHeight","distScale","d3","domain","range","radiScale","reduce","max","d","svg","current","attr","selectAll","remove","append","container","handleHover","enter","classed","handleClick","clearSelected","setState","on","updateView","distAxis","ticks","gDistAxisGroup","text","gDistAxis","transform","k","dom","scale","copy","setInterval","now","_this3","ref","src_Info","Table","table","getResolvedState","sortedData","selectionChangeListener","selections","es","columns","Header","accessor","width","id","showPageSizeOptions","resizable","filterable","defaultFilterMethod","filter","row","src","pivotId","qry","value","toLowerCase","undefined","String","includes","getTrProps","rowInfo","original","style","background","pageText","noDataText","Button_default","updateSelection","App","csvPath","require","parse","header","download","dynamicTyping","skipEmptyLines","complete","result","updateData","raw","planet_status","orbital_period","semi_major_axis","star_name","trim","radius","eccentricity","detection_type","discovered","res","s","newData","src_View","src_Table","handleSelectionChange","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd3d4116.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/catalog.57fa9aa8.csv\";","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nclass Info extends React.Component {\r\n  generateLink(name) {\r\n    const endpoint = name.replace(/ /g,\"_\");\r\n    return `http://exoplanet.eu/catalog/${endpoint}/`;\r\n  }\r\n\r\n  render() {\r\n    const info = this.props.info;\r\n    return (\r\n      <Card className=\"info-card\">\r\n        <CardHeader\r\n          action={\r\n            <div>\r\n              <IconButton onClick={this.props.closeListener}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <br/>\r\n              <IconButton className=\"info-card-link\" size=\"large\"\r\n                href={this.generateLink(info.name)} target=\"_blank\">\r\n                <LinkIcon />\r\n              </IconButton>\r\n            </div>\r\n          }\r\n          title={info.name}\r\n        />\r\n        <CardContent>\r\n          <div>mass: <strong>{info.mass || \"?\"} M<sub>J</sub></strong></div>\r\n          <div>radius: <strong>{info.radi || \"?\"} M<sub>J</sub></strong></div>\r\n          <div>orbital period: <strong>{info.perd} days</strong></div>\r\n          <div>semi-major axis: <strong>{info.dist} AU</strong></div>\r\n          <div>eccentricity (not shown): <strong>{info.ecct}</strong></div>\r\n          <div>host star: <strong>{info.star}</strong></div>\r\n          <div>detection method: <strong>{info.type || \"-\"}</strong></div>\r\n          <div>year of discovery: <strong>{info.year || \"-\"}</strong></div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport Info from './Info';\r\nimport * as d3 from 'd3';\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.planets = [];\r\n    this.view = React.createRef();\r\n    this.state = {\r\n      selection: null,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (Object.keys(prevProps.data).length < \r\n      Object.keys(this.props.data).length) {\r\n      this.makePlanets();\r\n      this.makeView();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  makePlanets() {\r\n    const planets = [];\r\n    Object.values(this.props.data).forEach(x => {\r\n      planets.push(x.planets.map(p => ({\r\n        ...p,\r\n        R: p.dist,\r\n        r: p.radi || Math.pow(p.mass, 0.32143),\r\n        v: 0.1/p.perd,\r\n        hidden: !x.selected,\r\n      })));\r\n    });\r\n    this.planets = planets.flat().map((p, i) => ({...p, i}));\r\n  }\r\n\r\n  makeView() {\r\n    clearInterval(this.interval);\r\n    const t0 = new Date().setHours(0,0,0,0);\r\n\r\n    const w = window.innerWidth - 250;\r\n    const h = window.innerHeight;\r\n\r\n    const data = this.planets;\r\n    const distScale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([0, w/2-50]);\r\n    const radiScale = d3.scaleLinear()\r\n      .domain([0, data.reduce((max, d) => Math.max(max, d.r), 0)])\r\n      .range([0, 10]);\r\n    data.forEach(d => {\r\n      d.R = distScale(d.R);\r\n      d.r = radiScale(d.r);\r\n    });\r\n\r\n    const svg = d3.select(this.view.current)\r\n      .attr(\"width\", w)\r\n      .attr(\"height\", h);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    svg.append(\"circle\")\r\n      .attr(\"r\", 1)\r\n      .attr(\"cx\", w/2)\r\n      .attr(\"cy\", h/2)\r\n      .attr(\"id\", \"sun\");\r\n\r\n    const container = svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${w/2},${h/2})`);\r\n\r\n    const handleHover = (d, enter) => {\r\n      d3.select(`#o${d.i}`).classed(\"hover\", enter);\r\n      d3.select(`#p${d.i}`).classed(\"hover\", enter);\r\n    }\r\n    const handleClick = d => {\r\n      this.clearSelected();\r\n      this.setState({ selection: d });\r\n      d3.select(`#o${d.i}`).classed(\"selected\", true);\r\n      d3.select(`#p${d.i}`).classed(\"selected\", true);\r\n    }\r\n\r\n    container.selectAll(\".orbit\").data(data).enter()\r\n      .append(\"circle\")\r\n        .attr(\"r\", d => d.R)\r\n        .attr(\"id\", d => `o${d.i}`)\r\n        .attr(\"class\", \"orbit\")\r\n        .on(\"mouseover\", d => handleHover(d, true))\r\n        .on(\"mouseout\", d => handleHover(d, false))\r\n        .on(\"click\", d => handleClick(d));\r\n    container.selectAll(\".planet_cluster\").data(data).enter()\r\n      .append(\"g\")\r\n        .attr(\"class\", \"planet_cluster\")\r\n      .append(\"circle\")\r\n        .attr(\"r\", d => d.r)\r\n        .attr(\"cx\", d => d.R)\r\n        .attr(\"id\", d => `p${d.i}`)\r\n        .attr(\"class\", \"planet\")\r\n        .on(\"mouseover\", d => handleHover(d, true))\r\n        .on(\"mouseout\", d => handleHover(d, false))\r\n        .on(\"click\", d => handleClick(d));\r\n    this.updateView();\r\n\r\n    const distAxis = d3.axisBottom(distScale).ticks(5);\r\n    const gDistAxisGroup = svg.append(\"g\")\r\n      .attr('transform', `translate(${w/2},${h-50})`)\r\n      .attr(\"class\", \"dist-axis\");\r\n    gDistAxisGroup.append(\"text\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"transform\", `translate(${w/4-25},${35})`)\r\n        .text(\"AU\");\r\n    const gDistAxis = gDistAxisGroup.append(\"g\").call(distAxis);\r\n    svg.call(d3.zoom().on(\"zoom\", () => {\r\n      svg.selectAll(\".orbit\").attr(\"r\", d => d.R * d3.event.transform.k);\r\n      svg.selectAll(\".planet\").attr(\"cx\", d => d.R * d3.event.transform.k);\r\n      const dom = [0, distScale.domain()[1] / d3.event.transform.k];\r\n      gDistAxis.call(distAxis.scale(distScale.copy().domain(dom)));\r\n    }));\r\n\r\n    this.interval = setInterval(() => {\r\n      svg.selectAll(\".planet_cluster\")\r\n        .attr(\"transform\", d => {\r\n          return `rotate(${(Date.now() - t0) * d.v})`;\r\n        });\r\n    }, 100);\r\n  }\r\n\r\n  updateView() {\r\n    const svg = d3.select(this.view.current);\r\n    svg.selectAll(\".orbit\").classed(\"hidden\", d => d.hidden);\r\n    svg.selectAll(\".planet_cluster\").classed(\"hidden\", d => d.hidden);\r\n  }\r\n\r\n  clearSelected() {\r\n    d3.selectAll(\".orbit.selected\").classed(\"selected\", false);\r\n    d3.selectAll(\".planet.selected\").classed(\"selected\", false);\r\n    this.setState({ selection: null });\r\n  }\r\n\r\n  render() {\r\n    this.planets.forEach(p => {\r\n      p.hidden = !this.props.data[p.star].selected;\r\n    });\r\n    this.updateView();\r\n    const selection = this.state.selection;\r\n    return (\r\n      <div className=\"View\">\r\n        <svg ref={this.view} />\r\n        {selection && !selection.hidden &&\r\n          <Info\r\n            info={selection}\r\n            closeListener={() => this.clearSelected()}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport 'react-table/react-table.css';\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.table = React.createRef();\r\n  }\r\n\r\n  updateSelection(selected) {\r\n    if (this.table.current) {\r\n      const data = this.table.current.getResolvedState().sortedData;\r\n      this.props.selectionChangeListener({\r\n        selected,\r\n        selections: data.map(d => d.star),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {   \r\n    const columns = [{\r\n      Header: \"Star Name\",\r\n      accessor: \"star\",\r\n      width: 150,\r\n    }, {\r\n      id: \"pCount\",\r\n      Header: \"# Planets\",\r\n      accessor: d => d.planets.length,\r\n      width: 100,\r\n    }];\r\n\r\n    const filterCaseInsensitive = (filter, row) => {\r\n      const src = row[filter.pivotId || filter.id];\r\n      const qry = filter.value.toLowerCase();\r\n      return src === undefined || String(src).toLowerCase().includes(qry);\r\n    };\r\n\r\n    const trProps = (state, rowInfo) => {\r\n      return (rowInfo && rowInfo.original?\r\n        {\r\n          onClick: () => this.props.selectionChangeListener({\r\n            selected: !rowInfo.original.selected,\r\n            selections: [rowInfo.original.star],\r\n          }),\r\n          style: {\r\n            background: rowInfo.original.selected? \"#eee\" : \"#fff\",\r\n          }\r\n        } : {});\r\n    };\r\n   \r\n    return (\r\n      <div className=\"Table\">\r\n        <ReactTable\r\n          ref={this.table}\r\n          data={Object.values(this.props.data)}\r\n          columns={columns}\r\n          showPageSizeOptions={false}\r\n          resizable={false}\r\n          filterable={true}\r\n          defaultFilterMethod={filterCaseInsensitive}\r\n          getTrProps={trProps}\r\n          pageText=\"\"\r\n          noDataText=\"No results found\"\r\n        />\r\n        <div className=\"select-bar\">\r\n          <Button size=\"small\" onClick={() => this.updateSelection(true)}>\r\n            Select All\r\n          </Button>\r\n          <Button size=\"small\" onClick={() => this.updateSelection(false)}>\r\n            Deselect All\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\nimport View from './View';\nimport Table from './Table';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n    };\n  }\n\n  componentWillMount() {\n    const csvPath = require('./catalog.csv');\n    const Papa = require('papaparse/papaparse.min.js');\n    Papa.parse(csvPath, {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      complete: result => this.updateData(result.data),\n    });\n  }\n\n  updateData(raw) {\n    let data = raw\n    .filter(p => {\n      return p.planet_status === \"Confirmed\" &&\n        p.orbital_period && p.semi_major_axis && p.star_name;\n    })\n    .map(p => ({\n      name: p[\"# name\"].trim(),\n      mass: p.mass,\n      radi: p.radius,\n      perd: p.orbital_period,\n      dist: p.semi_major_axis,\n      ecct: p.eccentricity,\n      type: p.detection_type,\n      year: p.discovered,\n      star: p.star_name.trim(),\n    }))\n    .reduce((res, p) => {\n      (res[p.star] = res[p.star] || {\n        star: p.star,\n        planets: [],\n        selected: true,\n      }).planets.push(p);\n      return res;\n    }, {})\n    this.setState({ data });\n  }\n\n  handleSelectionChange(s) {\n    const newData = {...this.state.data};\n    s.selections.forEach(star => {\n      newData[star].selected = s.selected;\n    });\n    this.setState({ data: newData });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <View\n          data={this.state.data}\n        />\n        <Table\n          data={this.state.data}\n          selectionChangeListener={s => this.handleSelectionChange(s)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}