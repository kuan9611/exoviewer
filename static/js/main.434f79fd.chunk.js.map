{"version":3,"sources":["catalog.csv","solar.csv","Info.js","View.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Info","name","endpoint","replace","concat","info","this","props","react_default","a","createElement","Card_default","className","CardHeader_default","action","IconButton_default","onClick","closeListener","Close_default","size","href","generateLink","target","Link_default","title","CardContent_default","mass","radi","perd","dist","ecct","star","type","year","React","Component","View","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","planets","view","createRef","state","selection","radiScale","prevProps","keys","data","length","makePlanets","makeView","clearInterval","interval","values","forEach","x","push","map","objectSpread","R","r","Math","pow","v","hidden","selected","flat","i","_this2","t0","Date","setHours","w","window","innerWidth","h","innerHeight","distScale","d3","domain","range","reduce","max","d","svg","current","attr","selectAll","remove","append","container","handleHover","enter","classed","handleClick","clearSelected","setState","on","updateView","distAxis","ticks","gDistAxisGroup","text","gDistAxis","transform","k","dom","scale","copy","setInterval","now","_this3","_this4","_this$state","ref","src_Info","min","step","value","onChange","e","handleRadiusScaleChange","Table","table","getResolvedState","sortedData","selectionChangeListener","selections","es","columns","Header","accessor","width","id","showPageSizeOptions","resizable","filterable","defaultFilterMethod","filter","row","src","pivotId","qry","toLowerCase","undefined","String","includes","getTrProps","rowInfo","original","style","background","pageText","noDataText","Button_default","updateSelection","App","Papa","parse","require","header","download","dynamicTyping","skipEmptyLines","complete","result","updateData","raw","planet_status","orbital_period","semi_major_axis","star_name","trim","radius","eccentricity","detection_type","discovered","res","s","newData","src_View","src_Table","handleSelectionChange","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.434f79fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/catalog.57fa9aa8.csv\";","module.exports = __webpack_public_path__ + \"static/media/solar.2992bb5f.csv\";","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nclass Info extends React.Component {\r\n  generateLink(name) {\r\n    const endpoint = name.replace(/ /g,\"_\");\r\n    return `http://exoplanet.eu/catalog/${endpoint}/`;\r\n  }\r\n\r\n  render() {\r\n    const info = this.props.info;\r\n    return (\r\n      <Card className=\"info-card\">\r\n        <CardHeader\r\n          action={\r\n            <div>\r\n              <IconButton onClick={this.props.closeListener}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <br/>\r\n              <IconButton className=\"info-card-link\" size=\"large\"\r\n                href={this.generateLink(info.name)} target=\"_blank\">\r\n                <LinkIcon />\r\n              </IconButton>\r\n            </div>\r\n          }\r\n          title={info.name}\r\n        />\r\n        <CardContent>\r\n          <div>mass: <strong>{info.mass || \"?\"} M<sub>J</sub></strong></div>\r\n          <div>radius: <strong>{info.radi || \"?\"} M<sub>J</sub></strong></div>\r\n          <div>orbital period: <strong>{info.perd} days</strong></div>\r\n          <div>semi-major axis: <strong>{info.dist} AU</strong></div>\r\n          <div>eccentricity (not shown): <strong>{info.ecct}</strong></div>\r\n          <div>host star: <strong>{info.star}</strong></div>\r\n          <div>detection method: <strong>{info.type || \"-\"}</strong></div>\r\n          <div>year of discovery: <strong>{info.year || \"-\"}</strong></div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport Info from './Info';\r\nimport * as d3 from 'd3';\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.planets = [];\r\n    this.view = React.createRef();\r\n    this.state = {\r\n      selection: null,\r\n      radiScale: 10,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (Object.keys(prevProps.data).length < \r\n      Object.keys(this.props.data).length) {\r\n      this.makePlanets();\r\n      this.makeView();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  makePlanets() {\r\n    const planets = [];\r\n    Object.values(this.props.data).forEach(x => {\r\n      planets.push(x.planets.map(p => ({\r\n        ...p,\r\n        R: p.dist,\r\n        r: p.radi || Math.pow(p.mass, 0.32143),\r\n        v: 0.1/p.perd,\r\n        hidden: !x.selected,\r\n      })));\r\n    });\r\n    this.planets = planets.flat().map((p, i) => ({...p, i}));\r\n  }\r\n\r\n  makeView() {\r\n    clearInterval(this.interval);\r\n    const t0 = new Date().setHours(0,0,0,0);\r\n\r\n    const w = window.innerWidth - 250;\r\n    const h = window.innerHeight;\r\n\r\n    const data = this.planets;\r\n    const distScale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([0, w/2-50]);\r\n    const radiScale = d3.scaleLinear()\r\n      .domain([0, data.reduce((max, d) => Math.max(max, d.r), 0)])\r\n      .range([0, 1]);\r\n    data.forEach(d => {\r\n      d.R = distScale(d.R);\r\n      d.r = radiScale(d.r);\r\n    });\r\n\r\n    const svg = d3.select(this.view.current)\r\n      .attr(\"width\", w)\r\n      .attr(\"height\", h);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    svg.append(\"circle\")\r\n      .attr(\"r\", 1)\r\n      .attr(\"cx\", w/2)\r\n      .attr(\"cy\", h/2)\r\n      .attr(\"id\", \"sun\");\r\n\r\n    const container = svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${w/2},${h/2})`);\r\n\r\n    const handleHover = (d, enter) => {\r\n      d3.select(`#o${d.i}`).classed(\"hover\", enter);\r\n      d3.select(`#p${d.i}`).classed(\"hover\", enter);\r\n    }\r\n    const handleClick = d => {\r\n      this.clearSelected();\r\n      this.setState({ selection: d });\r\n      d3.select(`#o${d.i}`).classed(\"selected\", true);\r\n      d3.select(`#p${d.i}`).classed(\"selected\", true);\r\n    }\r\n\r\n    container.selectAll(\".orbit\").data(data).enter()\r\n      .append(\"circle\")\r\n        .attr(\"r\", d => d.R)\r\n        .attr(\"id\", d => `o${d.i}`)\r\n        .attr(\"class\", \"orbit\")\r\n        .on(\"mouseover\", d => handleHover(d, true))\r\n        .on(\"mouseout\", d => handleHover(d, false))\r\n        .on(\"click\", d => handleClick(d));\r\n    container.selectAll(\".planet_cluster\").data(data).enter()\r\n      .append(\"g\")\r\n        .attr(\"class\", \"planet_cluster\")\r\n      .append(\"circle\")\r\n        .attr(\"r\", d => d.r * this.state.radiScale)\r\n        .attr(\"cx\", d => d.R)\r\n        .attr(\"id\", d => `p${d.i}`)\r\n        .attr(\"class\", \"planet\")\r\n        .on(\"mouseover\", d => handleHover(d, true))\r\n        .on(\"mouseout\", d => handleHover(d, false))\r\n        .on(\"click\", d => handleClick(d));\r\n    this.updateView();\r\n\r\n    const distAxis = d3.axisBottom(distScale).ticks(5);\r\n    const gDistAxisGroup = svg.append(\"g\")\r\n      .attr('transform', `translate(${w/2},${h-50})`)\r\n      .attr(\"class\", \"dist-axis\");\r\n    gDistAxisGroup.append(\"text\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"transform\", `translate(${w/4-25},${35})`)\r\n        .text(\"AU\");\r\n    const gDistAxis = gDistAxisGroup.append(\"g\").call(distAxis);\r\n    svg.call(d3.zoom().on(\"zoom\", () => {\r\n      svg.selectAll(\".orbit\").attr(\"r\", d => d.R * d3.event.transform.k);\r\n      svg.selectAll(\".planet\").attr(\"cx\", d => d.R * d3.event.transform.k);\r\n      const dom = [0, distScale.domain()[1] / d3.event.transform.k];\r\n      gDistAxis.call(distAxis.scale(distScale.copy().domain(dom)));\r\n    }));\r\n\r\n    this.interval = setInterval(() => {\r\n      svg.selectAll(\".planet_cluster\")\r\n        .attr(\"transform\", d => {\r\n          return `rotate(${(Date.now() - t0) * d.v})`;\r\n        });\r\n    }, 100);\r\n  }\r\n\r\n  updateView() {\r\n    const svg = d3.select(this.view.current);\r\n    svg.selectAll(\".orbit\").classed(\"hidden\", d => d.hidden);\r\n    svg.selectAll(\".planet_cluster\").classed(\"hidden\", d => d.hidden)\r\n      .selectAll(\"circle\").attr(\"r\", d => d.r * this.state.radiScale);\r\n  }\r\n\r\n  clearSelected() {\r\n    d3.selectAll(\".orbit.selected\").classed(\"selected\", false);\r\n    d3.selectAll(\".planet.selected\").classed(\"selected\", false);\r\n    this.setState({ selection: null });\r\n  }\r\n\r\n  handleRadiusScaleChange(radiScale) {\r\n    this.setState({ radiScale });\r\n  }\r\n\r\n  render() {\r\n    this.planets.forEach(p => {\r\n      p.hidden = !this.props.data[p.star].selected;\r\n    });\r\n    this.updateView();\r\n    const { selection, radiScale } = this.state;\r\n    return (\r\n      <div className=\"View\">\r\n        <svg ref={this.view} />\r\n        {selection && !selection.hidden &&\r\n          <Info\r\n            info={selection}\r\n            closeListener={() => this.clearSelected()}\r\n          />\r\n        }\r\n        <input className=\"radi-slider\"\r\n          type=\"range\"\r\n          min=\"5\" max=\"100\" step=\"5\" value={radiScale}\r\n          onChange={e => this.handleRadiusScaleChange(e.target.value)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport 'react-table/react-table.css';\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.table = React.createRef();\r\n  }\r\n\r\n  updateSelection(selected) {\r\n    if (this.table.current) {\r\n      const data = this.table.current.getResolvedState().sortedData;\r\n      this.props.selectionChangeListener({\r\n        selected,\r\n        selections: data.map(d => d.star),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {   \r\n    const columns = [{\r\n      Header: \"Star Name\",\r\n      accessor: \"star\",\r\n      width: 150,\r\n    }, {\r\n      id: \"pCount\",\r\n      Header: \"# Planets\",\r\n      accessor: d => d.planets.length,\r\n      width: 100,\r\n    }];\r\n\r\n    const filterCaseInsensitive = (filter, row) => {\r\n      const src = row[filter.pivotId || filter.id];\r\n      const qry = filter.value.toLowerCase();\r\n      return src === undefined || String(src).toLowerCase().includes(qry);\r\n    };\r\n\r\n    const trProps = (state, rowInfo) => {\r\n      return (rowInfo && rowInfo.original?\r\n        {\r\n          onClick: () => this.props.selectionChangeListener({\r\n            selected: !rowInfo.original.selected,\r\n            selections: [rowInfo.original.star],\r\n          }),\r\n          style: {\r\n            background: rowInfo.original.selected? \"#eee\" : \"#fff\",\r\n          }\r\n        } : {});\r\n    };\r\n   \r\n    return (\r\n      <div className=\"Table\">\r\n        <ReactTable\r\n          ref={this.table}\r\n          data={Object.values(this.props.data)}\r\n          columns={columns}\r\n          showPageSizeOptions={false}\r\n          resizable={false}\r\n          filterable={true}\r\n          defaultFilterMethod={filterCaseInsensitive}\r\n          getTrProps={trProps}\r\n          pageText=\"\"\r\n          noDataText=\"No results found\"\r\n        />\r\n        <div className=\"select-bar\">\r\n          <Button size=\"small\" onClick={() => this.updateSelection(true)}>\r\n            Select All\r\n          </Button>\r\n          <Button size=\"small\" onClick={() => this.updateSelection(false)}>\r\n            Deselect All\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\nimport Papa from 'papaparse';\nimport View from './View';\nimport Table from './Table';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n    };\n  }\n\n  componentWillMount() {\n    Papa.parse(require('./catalog.csv'), {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      complete: result => this.updateData(result.data),\n    });\n    Papa.parse(require('./solar.csv'), {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      complete: result => this.updateData(result.data),\n    });\n  }\n\n  updateData(raw) {\n    let data = raw\n    .filter(p => {\n      return p.planet_status === \"Confirmed\" &&\n        p.orbital_period && p.semi_major_axis && p.star_name;\n    })\n    .map(p => ({\n      name: p[\"# name\"].trim(),\n      mass: p.mass,\n      radi: p.radius,\n      perd: p.orbital_period,\n      dist: p.semi_major_axis,\n      ecct: p.eccentricity,\n      type: p.detection_type,\n      year: p.discovered,\n      star: p.star_name.trim(),\n    }))\n    .reduce((res, p) => {\n      (res[p.star] = res[p.star] || {\n        star: p.star,\n        planets: [],\n        selected: true,\n      }).planets.push(p);\n      return res;\n    }, {})\n    this.setState({ data: {...this.state.data, ...data} });\n  }\n\n  handleSelectionChange(s) {\n    const newData = {...this.state.data};\n    s.selections.forEach(star => {\n      newData[star].selected = s.selected;\n    });\n    this.setState({ data: newData });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <View\n          data={this.state.data}\n        />\n        <Table\n          data={this.state.data}\n          selectionChangeListener={s => this.handleSelectionChange(s)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}